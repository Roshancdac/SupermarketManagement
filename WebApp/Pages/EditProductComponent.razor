@page "/editproduct/{id}"
<h3>Edit Product</h3>
<br/>

@if (product != null)
{
    <EditForm Model="product" OnValidSubmit="OnValidSumit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <div class="form-group">
            <label for="name">Name</label>
            <InputText id="name" @bind-Value="product.Name" class="form-control"></InputText>
        </div>
        <br />
        <div class="form-group">
            <label for="price">Description</label>
            <InputNumber id="price" @bind-Value="product.Price" class="form-control"></InputNumber>
        </div>
        <br />
        <div class="form-group">
            <label for="category">Category</label>
            <select class="form-control" id="category" @bind="product.CategoryId">
                <option value="0" selected></option>
                @foreach (var category in categories)
                {
                    <option value="@category.CategoryId">@category.Name</option>
                }
            </select>
        </div>
        <br />
        <div class="form-group">
            <label for="quentity">Description</label>
            <InputNumber id="quentity" @bind-Value="product.Quantity" class="form-control"></InputNumber>
        </div>
        <br />
        <div>
            <span>
                <button type="submit" class="btn btn-primary">Save</button> &ensp;
                <button type="submit" class="btn btn-primary" @onclick="OnCancle">Cancle</button>
            </span>
        </div>
    </EditForm>
}


@code {

    [Parameter]
    public string id { get; set; } = default!;

    [Inject]
    private IGetProductByIdUseCase _getProductByIdUseCase { get; set; } = default!;

    [Inject]
    private IViewCategoriesUseCase _viewCategoriesUseCase { get; set; } = default!;

    [Inject]
    private IEditProductUseCase _editProductUseCase { get; set; } = default!;

    [Inject]
    private NavigationManager navigationManager { get; set; } = default!;

    private Product product { get; set; } = default!;

    private IEnumerable<Category> categories { get; set; } = default!;
}

@code{

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        product = _getProductByIdUseCase.Execute(int.Parse(id));
        categories = _viewCategoriesUseCase.Execute();
    }

    private void OnValidSumit()
    {
        _editProductUseCase.Execute(product);
        navigationManager.NavigateTo("/products");
    }

    private void OnCancle()
    {
        navigationManager.NavigateTo("/products");
    }
}