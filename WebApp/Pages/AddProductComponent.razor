@page "/addproduct"
<h3>Add Product</h3>
<br/>

@if(product != null)
{
    <EditForm Model="product" OnValidSubmit="OnValidSumit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <div class="form-group">
            <label for="name">Name</label>
            <InputText id="name" @bind-Value="product.Name" class="form-control"></InputText>
        </div>
        <br/>
        <div class="form-group">
            <label for="category">Category</label>
            <select class="form-control" id="category" @bind="product.CategoryId">
                <option value="0" selected></option>
                @foreach(var category in _categorys)
                {
                  <option value="@category.CategoryId">@category.Name</option>
                }
            </select>
        </div>
        <br/>
        <div class="form-group">
            <lable for="price">Price</lable>
            <InputNumber id="price" @bind-Value="product.Price" @bind-Value:format="F2" class="form-control"></InputNumber>
        </div>
        <br/>
        <div class="form-group">
            <lable for="quentity">Quentity</lable>
            <InputNumber id="quentity" @bind-Value="product.Quantity" class="form-control"></InputNumber>
        </div>
        <br/>
        <div>
            <span>
        <button type="submit" class="btn btn-primary">Save</button>
            &ensp;
        <button type="submit" class="btn btn-primary" @onclick="OnCancle">Cancle</button>
            </span>
        </div>
    </EditForm>
}

@code {

    [Inject]
    private IViewCategoriesUseCase _viewCategorysUseCase { get; set; } = default!;

    [Inject]
    private IAddProductUseCase _addProductUseCase { get; set; } = default!;

    [Inject]
    private NavigationManager _navigationManager { get; set; } = default!;

    private Product product;

    private IEnumerable<Category> _categorys;

}

@code{
    protected override void OnInitialized()
    {
        base.OnInitialized();
        product = new Product();
        _categorys = _viewCategorysUseCase.Execute();

    }

    private void OnValidSumit()
    {
        _addProductUseCase.Execute(product);
        _navigationManager.NavigateTo("/products");
    }

    private void OnCancle()
    {
        _navigationManager.NavigateTo("/products");
    }
}
